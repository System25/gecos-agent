#!/usr/bin/python
# -*- Mode: Python; coding: utf-8; indent-tabs-mode: nil; tab-width: 4 -*-
__author__ = "David Amian Valle <damian@emergya.com>"
__copyright__ = "Copyright (C) 2014, Junta de Andaluc√≠a <gecos@guadalinex.org>"
__license__ = "GPL-2"

import os
import sys
import requests
import json
import subprocess
import time
import random

if __name__ == '__main__':
    fp = open('/tmp/gecos-chef-client-wrapper.log', "w")
    args = sys.argv
    args.pop(0)
    try:
        gcc_flag = open ('/etc/gcc.control')
    except Exception as e:
        fp.write("This workstation is not linked to a Control Center")
        fp.close()
        sys.exit(1)
    # Random delay to avoid server congestion, between 0s and 10 minutes (600s)
    # gecos-chef-client-wrapper should be called as "gecos-chef-client-wrapper -d" to delay execution of chef-client
    # TODO: Move the maximum delay to a configuration file
    max_delay = 600
    lapse = 0
    if len(args) > 0 and args[0] == '-d':
        lapse = random.randint(0, max_delay)
        fp.write("Client delayed "+str(lapse)+" seconds to avoid congestion.\n")
        args.pop(0)
    time.sleep(lapse)      
        
    content = gcc_flag.read()
    gcc_flag.close()
    gcc_flag_json = json.loads(content)
    url = gcc_flag_json['uri_gcc']
    node_id = gcc_flag_json['gcc_nodename']
    fp.write("Connecting to GECOS Control Center api\n")
    try:
        res = requests.put(url+'/chef-client/run/', data={"node_id":node_id, "gcc_username":gcc_flag_json['gcc_username']},verify=False)
    except Exception as e:
        fp.write("Error connecting with GECOS Control Center\n")
        fp.write(str(e))
        fp.close()
        sys.exit(1)
    if res.ok and res.json()['ok']:
        cmd = ['/usr/bin/chef-client']
        cmd = cmd + args
        process = subprocess.Popen(cmd)
        process.wait()
        fp.write(str(process.returncode) + '\n')
        if process.returncode != 0:
            fp.write("Send chef-client error to GECOS Control Center\n")
            fp.close()
            sys.exit(1)
        else:
            fp.write("OK\n")
            fp.close()
            sys.exit(0)
    else:
        fp.write("Error talking with GECOS Control Center\n")
        fp.close()
        sys.exit(1)
